events {
}

http {
    upstream users_service {
        server users:8080;
    }

    upstream songs_service {
        server songs:8080;
    }

    server {
        listen 8080;

        # == INBOUND

        # Authentication service
        location = /auth {
            internal;

            proxy_method GET;
            proxy_pass http://users_service/auth;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Method $request_method;

            # Forward all incoming headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Authentication endpoint - not protected by auth (obv)
        location = /api/users {
            proxy_pass http://users_service/public;
        }

        # USERS route
        location /api/users {
            auth_request /auth;

            auth_request_set $apelle_user_id $upstream_http_x_apelle_user_id;
            auth_request_set $apelle_user_name $upstream_http_x_apelle_user_name;

            proxy_set_header X-Apelle-User-Id $apelle_user_id;
            proxy_set_header X-Apelle-User-Name $apelle_user_name;

            proxy_pass http://users_service/public;
        }

        # SONGS route
        location /api/songs {
            auth_request /auth;

            auth_request_set $apelle_user_id $upstream_http_x_apelle_user_id;
            auth_request_set $apelle_user_name $upstream_http_x_apelle_user_name;

            proxy_set_header X-Apelle-User-Id $apelle_user_id;
            proxy_set_header X-Apelle-User-Name $apelle_user_name;

            proxy_pass http://songs_service/public;
        }

        # == OUTBOUND
        # Making requests go through the gateway so containers can use only http
        # (having https would mean install OpenSSL inside the containers)

        # Google APIs
        location /googleapis/ {
            proxy_pass https://www.googleapis.com/;
            proxy_ssl_server_name on;
            proxy_set_header Host www.googleapis.com;

        }
    }
}