# Authentication service
location = /api/auth {
    internal;

    proxy_method GET;
    proxy_pass http://users_service/auth;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_set_header X-Original-URI '$request_uri';
    proxy_set_header X-Original-Method '$request_method';

    # Forward all incoming headers
    proxy_set_header Host '$host';
    proxy_set_header X-Real-IP '$remote_addr';
    proxy_set_header X-Forwarded-For '$proxy_add_x_forwarded_for';
    proxy_set_header X-Forwarded-Host '$host';
    proxy_set_header X-Forwarded-Proto '$scheme';
}

# USERS route
location /api/users {
    include inbound/service.conf;

    proxy_pass http://users_service/public;
}

# SONGS route
location /api/songs {
    include inbound/service.conf;

    proxy_pass http://songs_service/public;
}

# QUEUES route
location /api/queues {
    include inbound/service.conf;

    proxy_pass http://queues_service/public;
}

# EVENTS route
location ~ ^/api/queues/([^/]+)/events$ {
    include inbound/service.conf;

    proxy_pass http://queues_service/public/$1/events;

    set $apelle_user_id '$sent_http_apelle_user_id';
    set $apelle_user_name '$sent_http_apelle_user_name';
    set $apelle_user_global_roles '$sent_http_apelle_user_global_roles';
    set $apelle_trace_id '$sent_http_apelle_trace_id';

    proxy_intercept_errors on;
    error_page 307 = @redirect_to_queues_events;
}

location @redirect_to_queues_events {
    internal;

    proxy_set_header Apelle-User-Id '$apelle_user_id';
    proxy_set_header Apelle-User-Name '$apelle_user_name';
    proxy_set_header Apelle-User-Global-Roles '$apelle_user_global_roles';
    proxy_set_header Apelle-Trace-Id '$apelle_trace_id';

    set $full_redirect_url 'http://queues_events_service$upstream_http_location';
    proxy_pass '$full_redirect_url';

    proxy_intercept_errors off;
}

# CONFIGS route
location /api/configs {
    include inbound/service.conf;

    proxy_pass http://configs_service/public;
}


# API DOCS route
location /api-docs {
    include inbound/service.conf;

    proxy_pass http://api_docs_service/public;
}

# Swagger UI route
location /swagger-ui {
    include inbound/service.conf;

    proxy_pass http://api_docs_service/swagger-ui;
}

# Frontend
location / {
    # No auth request, those are static files

    proxy_pass http://front_service;
}